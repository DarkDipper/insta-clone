import "@yourapp/styles/globals.scss";
import type { AppProps } from "next/app";
import Head from "next/head";
import ThemeProvider from "../theme";
import localFont from "@next/font/local";
import { QueryClient, QueryClientProvider } from "react-query";
import { ReactQueryDevtools } from "react-query/devtools";
import { useEffect, useState } from "react";
import { AuthProvider } from "@yourapp/Auth/AuthProvider";
import { AuthGuard } from "@yourapp/Auth/AuthGuard";
import { useRouter } from "next/router";
import Loading from "@yourapp/components/Loading";
import "react-loading-skeleton/dist/skeleton.css";
const segoeUI = localFont({
  src: "../public/font/Segoe fonts v1710/segoeui.ttf",
  preload: false,
});

export default function App({ Component, pageProps }: AppProps) {
  const [queryClient] = useState(() => new QueryClient());
  const router = useRouter();
  const [loading, setLoading] = useState(false);
  useEffect(() => {
    const handleStart = () => {
      setLoading(true);
    };

    const handleComplete = () => {
      setLoading(false);
    };

    router.events.on("routeChangeStart", handleStart);
    router.events.on("routeChangeComplete", handleComplete);
    return () => {
      router.events.off("routeChangeStart", handleStart);
      router.events.off("routeChangeComplete", handleComplete);
    };
  }, [router.events]);
  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/instagram.ico" />
        <title>Insta clone</title>
      </Head>
      <QueryClientProvider client={queryClient}>
        <div className={segoeUI.className}>
          <AuthProvider>
            <ThemeProvider>
              {pageProps.requireAuth ? (
                <AuthGuard>
                  {loading ? <Loading /> : <Component {...pageProps} />}
                </AuthGuard>
              ) : loading ? (
                <Loading />
              ) : (
                <Component {...pageProps} />
              )}
            </ThemeProvider>
          </AuthProvider>
        </div>
        <ReactQueryDevtools initialIsOpen={false} />
      </QueryClientProvider>
    </>
  );
}
